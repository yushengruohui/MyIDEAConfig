<application>
  <component name="EasyCodeSetting">
    <option name="author" value="yusheng" />
    <option name="currTemplateGroupName" value="self_mybatis_dao" />
    <option name="currTypeMapperGroupName" value="self_mybatis" />
    <option name="globalConfigGroupMap">
      <map>
        <entry key="Default">
          <value>
            <GlobalConfigGroup>
              <option name="elementList">
                <list>
                  <GlobalConfig>
                    <option name="name" value="init" />
                    <option name="value" value="##初始化区域&#10;&#10;##去掉表的t_前缀&#10;#if($tableInfo.obj.name.startsWith(&quot;t_&quot;))&#10;    $!tableInfo.setName($tool.getClassName($tableInfo.obj.name.substring(2)))&#10;#end&#10;&#10;&#10;&#10;##实现动态排除列&#10;#set($temp = $tool.newHashSet(&quot;testCreateTime&quot;, &quot;otherColumn&quot;))&#10;#foreach($item in $temp)&#10;    #set($newList = $tool.newArrayList())&#10;    #foreach($column in $tableInfo.fullColumn)&#10;        #if($column.name!=$item)&#10;            ##带有反回值的方法调用时使用$tool.call来消除返回值&#10;            $tool.call($newList.add($column))&#10;        #end&#10;    #end&#10;    ##重新保存&#10;    $tableInfo.setFullColumn($newList)&#10;#end&#10;&#10;##对importList进行篡改&#10;#set($temp = $tool.newHashSet())&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(!$column.type.startsWith(&quot;java.lang.&quot;))&#10;        ##带有反回值的方法调用时使用$tool.call来消除返回值&#10;        $tool.call($temp.add($column.type))&#10;    #end&#10;#end&#10;##覆盖&#10;#set($importList = $temp)" />
                  </GlobalConfig>
                  <GlobalConfig>
                    <option name="name" value="define" />
                    <option name="value" value="##（Velocity宏定义）&#10;&#10;##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(&quot;Test&quot;)&#10;#macro(setTableSuffix $suffix)&#10;    #set($tableName = $!tool.append($tableInfo.name, $suffix))&#10;#end&#10;&#10;##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(&quot;Test&quot;)&#10;#macro(setPackageSuffix $suffix)&#10;#if($suffix!=&quot;&quot;)package #end#if($tableInfo.savePackageName!=&quot;&quot;)$!{tableInfo.savePackageName}.#{end}$!suffix;&#10;#end&#10;&#10;##定义直接保存路径与文件名简化的宏定义，调用方式：#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;#macro(save $path $fileName)&#10;    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))&#10;    $!callback.setFileName($tool.append($tableInfo.name, $fileName))&#10;#end&#10;&#10;##定义表注释的宏定义，调用方式：#tableComment(&quot;注释信息&quot;)&#10;#macro(tableComment $desc)&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})$desc&#10; *&#10; * @author $!author&#10; */&#10;#end&#10;&#10;##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)&#10;#macro(getSetMethod $column)&#10;&#10;    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {&#10;        return $!{column.name};&#10;    }&#10;&#10;    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {&#10;        this.$!{column.name} = $!{column.name};&#10;    }&#10;#end" />
                  </GlobalConfig>
                  <GlobalConfig>
                    <option name="name" value="autoImport" />
                    <option name="value" value="##自动导入包（仅导入实体属性需要的包，通常用于实体类）&#10;#foreach($import in $importList)&#10;import $!import;&#10;#end" />
                  </GlobalConfig>
                  <GlobalConfig>
                    <option name="name" value="mybatisSupport" />
                    <option name="value" value="##针对Mybatis 进行支持，主要用于生成xml文件&#10;#foreach($column in $tableInfo.fullColumn)&#10;    ##储存列类型&#10;    $tool.call($column.ext.put(&quot;sqlType&quot;, $tool.getField($column.obj.dataType, &quot;typeName&quot;)))&#10;    #if($tool.newHashSet(&quot;java.lang.String&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;VARCHAR&quot;)&#10;    #elseif($tool.newHashSet(&quot;java.lang.Boolean&quot;, &quot;boolean&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;BOOLEAN&quot;)&#10;    #elseif($tool.newHashSet(&quot;java.lang.Byte&quot;, &quot;byte&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;BYTE&quot;)&#10;    #elseif($tool.newHashSet(&quot;java.lang.Integer&quot;, &quot;int&quot;, &quot;java.lang.Short&quot;, &quot;short&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;INTEGER&quot;)&#10;    #elseif($tool.newHashSet(&quot;java.lang.Long&quot;, &quot;long&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;INTEGER&quot;)&#10;    #elseif($tool.newHashSet(&quot;java.lang.Float&quot;, &quot;float&quot;, &quot;java.lang.Double&quot;, &quot;double&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;NUMERIC&quot;)&#10;    #elseif($tool.newHashSet(&quot;java.util.Date&quot;, &quot;java.sql.Timestamp&quot;, &quot;java.time.Instant&quot;, &quot;java.time.LocalDateTime&quot;, &quot;java.time.OffsetDateTime&quot;, &quot;&#9;java.time.ZonedDateTime&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;TIMESTAMP&quot;)&#10;    #elseif($tool.newHashSet(&quot;java.sql.Date&quot;, &quot;java.time.LocalDate&quot;).contains($column.type))&#10;        #set($jdbcType=&quot;TIMESTAMP&quot;)&#10;    #else&#10;        ##其他类型&#10;        #set($jdbcType=&quot;OTHER&quot;)&#10;    #end&#10;    $tool.call($column.ext.put(&quot;jdbcType&quot;, $jdbcType))&#10;#end&#10;&#10;##定义宏，查询所有列&#10;#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end" />
                  </GlobalConfig>
                </list>
              </option>
              <option name="name" value="Default" />
            </GlobalConfigGroup>
          </value>
        </entry>
      </map>
    </option>
    <option name="templateGroupMap">
      <map>
        <entry key="Default">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Controller&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/controller&quot;))&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller;&#10;&#10;import $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.slf4j.Logger;&#10;import org.slf4j.LoggerFactory;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表控制层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@Controller&#10;public class $!{tableName} {&#10;    //private static final Logger logger = LoggerFactory.getLogger($!{tableName}.class);&#10;    &#10;    @Resource&#10;    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;&#10;    &#10;    @RequestMapping(&quot;/page/$!tool.firstLowerCase($tableInfo.name)&quot;)&#10;    public String toTestDome() {&#10;        //logger.info(&quot;testDome success&quot;);&#10;        return &quot;redirect:/&quot;;&#10;    }&#10;    &#10;    &#10;}" />
                    <option name="name" value="controller.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;RestController&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/controller/restful&quot;))&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}controller.restful;&#10;&#10;import $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.slf4j.Logger;&#10;import org.slf4j.LoggerFactory;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表控制层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@RestController&#10;public class $!{tableName} {&#10;    //private static final Logger logger = LoggerFactory.getLogger($!{tableName}.class);&#10;    &#10;    @Resource&#10;    private $!{tableInfo.name}Service $!tool.firstLowerCase($tableInfo.name)Service;&#10;    &#10;    @GetMapping(&quot;/$!tool.firstLowerCase($tableInfo.name)&quot;)&#10;    public String testDome() {&#10;        //logger.info(&quot;testDome success&quot;);&#10;        return &quot;success&quot;;&#10;    }&#10;    &#10;    &#10;}" />
                    <option name="name" value="controller_restful.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Service&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;&#10;&#10;import $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name};&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务接口&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 查询所有$!{tableInfo.name}信息&#10;     *&#10;     * @return 实例对象&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAll$!{tableInfo.name}();&#10;    &#10;    /**&#10;     * 根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象$!{tableInfo.name}&#10;     */&#10;    $!{tableInfo.name} query$!{tableInfo.name}ByParam($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;    &#10;    /**&#10;     * 根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}列表&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象$!{tableInfo.name}&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; query$!{tableInfo.name}ListByParam($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    int insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 实例对象&#10;     */&#10;    int update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 是否成功(1：成功|0：失败)&#10;     */&#10;    int delete$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;&#10;}" />
                    <option name="name" value="service.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;ServiceImpl&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service/impl&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;&#10;&#10;import $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Mapper;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.slf4j.Logger;&#10;import org.slf4j.LoggerFactory;&#10;import org.springframework.stereotype.Service;&#10;&#10;import javax.annotation.Resource;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;@Service(&quot;$!tool.firstLowerCase($!{tableInfo.name})Service&quot;)&#10;public class $!{tableName} implements $!{tableInfo.name}Service {&#10;    //private static final Logger logger = LoggerFactory.getLogger($!{tableName}.class);&#10;    &#10;    @Resource&#10;    private $!{tableInfo.name}Mapper $!tool.firstLowerCase($!{tableInfo.name})Mapper;&#10;&#10;    /**&#10;     * 查询所有$!{tableInfo.name}信息&#10;     *&#10;     * @return 对象$!{tableInfo.name}列表&#10;     */&#10;    @Override&#10;    public List&lt;$!{tableInfo.name}&gt; queryAll$!{tableInfo.name}() {&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Mapper.queryAll$!{tableInfo.name}();&#10;    }&#10;    &#10;    /**&#10;     * 根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象$!{tableInfo.name}&#10;     */&#10;     @Override&#10;    public $!{tableInfo.name} query$!{tableInfo.name}ByParam($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})){&#10;        if($!tool.firstLowerCase($!{tableInfo.name})==null){&#10;            return null;&#10;        }&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Mapper.query$!{tableInfo.name}ByParam($!tool.firstLowerCase($!{tableInfo.name}));&#10;    }&#10;    &#10;    /**&#10;     * 根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}列表&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象$!{tableInfo.name}&#10;     */&#10;    public List&lt;$!{tableInfo.name}&gt; query$!{tableInfo.name}ListByParam($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})){&#10;        if($!tool.firstLowerCase($!{tableInfo.name})==null){&#10;            return null;&#10;        }&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Mapper.query$!{tableInfo.name}ListByParam($!tool.firstLowerCase($!{tableInfo.name}));&#10;    }&#10;    &#10;    /**&#10;     * 新增$!{tableInfo.name}数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 是否成功(1：成功|0：失败)&#10;     */&#10;    @Override&#10;    public int insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {&#10;        if($!tool.firstLowerCase($!{tableInfo.name})==null){&#10;            return 0;&#10;        }&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Mapper.insert$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name}));&#10;    }&#10;&#10;    /**&#10;     * 修改$!{tableInfo.name}数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 是否成功(1：成功|0：失败)&#10;     */&#10;    @Override&#10;    public int update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})) {&#10;        if($!tool.firstLowerCase($!{tableInfo.name})==null){&#10;            return 0;&#10;        }&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Mapper.update$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name}));&#10;    }&#10;&#10;    /**&#10;     * 通过主键删除$!{tableInfo.name}数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 是否成功(1：成功|0：失败)&#10;     */&#10;    @Override&#10;    public int delete$!{tableInfo.name}ById($!pk.shortType $!pk.name) {&#10;        if($!pk.name==null){&#10;            return 0;&#10;        }&#10;        return this.$!{tool.firstLowerCase($!{tableInfo.name})}Mapper.delete$!{tableInfo.name}ById($!pk.name);&#10;    }&#10;}" />
                    <option name="name" value="serviceImpl.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Mapper&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/dao&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;&#10;&#10;import $!{tableInfo.savePackageName}.pojo.$!{tableInfo.name};&#10;import org.apache.ibatis.annotations.Param;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层&#10; *&#10; * @author $!author&#10; * @since $!time.currTime()&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 查询所有$!{tableInfo.name}信息&#10;     *&#10;     * @return 对象$!{tableInfo.name}列表&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; queryAll$!{tableInfo.name}();&#10;&#10;    /**&#10;     * 根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象$!{tableInfo.name}&#10;     */&#10;    $!{tableInfo.name} query$!{tableInfo.name}ByParam($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;    &#10;    /**&#10;     * 根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}列表&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 对象$!{tableInfo.name}&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; query$!{tableInfo.name}ListByParam($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;    &#10;    /**&#10;     * 新增$!{tableInfo.name}数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 是否成功(1：成功|0：失败)&#10;     */&#10;    int insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 修改$!{tableInfo.name}数据&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name}) 实例对象&#10;     * @return 是否成功(1：成功|0：失败)&#10;     */&#10;    int update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name}));&#10;&#10;    /**&#10;     * 通过主键删除数据&#10;     *&#10;     * @param $!pk.name 主键&#10;     * @return 是否成功(1：成功|0：失败)&#10;     */&#10;    int delete$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;&#10;}" />
                    <option name="name" value="dao.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;Mapper.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;&lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Mapper&quot;&gt;&#10;&#10;    &lt;resultMap type=&quot;$!{tableInfo.savePackageName}.pojo.$!{tableInfo.name}&quot; id=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;        &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#end&#10;    &lt;/resultMap&gt;&#10;&#10;    &lt;!--查询所有$!{tableInfo.name}信息--&gt;&#10;    &lt;select id=&quot;queryAll$!{tableInfo.name}&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}--&gt;&#10;    &lt;select id=&quot;query$!{tableInfo.name}ByParam&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;        limit 1&#10;    &lt;/select&gt;&#10;    &lt;!--根据实体类$!{tableInfo.name}的相关属性查询实体类$!{tableInfo.name}列表--&gt;&#10;    &lt;select id=&quot;query$!{tableInfo.name}ListByParam&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--新增$!{tableInfo.name}数据--&gt;&#10;    &lt;insert id=&quot;insert$!{tableInfo.name}&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into `$!{tableInfo.obj.name}`(&#10;            &lt;trim suffixOverrides=&quot;,&quot;&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;$!column.obj.name, &lt;/if&gt;&#10;#end            &lt;/trim&gt;&#10;                )&#10;        values (&#10;            &lt;trim suffixOverrides=&quot;,&quot;&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;#{$!{column.name}}, &lt;/if&gt;&#10;#end            &lt;/trim&gt;&#10;                )&#10;    &lt;/insert&gt;&#10;&#10;    &lt;!--修改$!{tableInfo.name}记录--&gt;&#10;    &lt;update id=&quot;update$!{tableInfo.name}&quot;&gt;&#10;        update `$!{tableInfo.obj.name}`&#10;        &lt;set&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                $!column.obj.name = #{$!column.name},&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/set&gt;&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/update&gt;&#10;&#10;    &lt;!--通过主键删除一条$!{tableInfo.name}记录--&gt;&#10;    &lt;delete id=&quot;delete$!{tableInfo.name}ById&quot;&gt;&#10;        delete from `$!{tableInfo.obj.name}` where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/delete&gt;&#10;&#10;&lt;/mapper&gt;" />
                    <option name="name" value="mapper.xml" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/pojo&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;pojo&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;实体类&quot;)&#10;public class $!{tableInfo.name} implements Serializable {&#10;    private static final long serialVersionUID = 1L;&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})//${column.comment}#end&#10;&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;##使用宏定义实现get,set方法&#10;    #getSetMethod($column)&#10;#end&#10;    &#10;}" />
                    <option name="name" value="pojo.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/pojo&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;pojo&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import lombok.Data;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;实体类&quot;)&#10;@Data&#10;public class $!{tableInfo.name} implements Serializable {&#10;    private static final long serialVersionUID = 1L;&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})//${column.comment}#end&#10;&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;    &#10;}" />
                    <option name="name" value="pojo_data.java" />
                  </Template>
                </list>
              </option>
              <option name="name" value="Default" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="MybatisPlus">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/entity&quot;, &quot;.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;entity&quot;)&#10;&#10;##自动导入包（全局变量）&#10;$!autoImport&#10;import com.baomidou.mybatisplus.extension.activerecord.Model;&#10;import java.io.Serializable;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表实体类&quot;)&#10;@SuppressWarnings(&quot;serial&quot;)&#10;public class $!{tableInfo.name} extends Model&lt;$!{tableInfo.name}&gt; {&#10;#foreach($column in $tableInfo.fullColumn)&#10;    #if(${column.comment})//${column.comment}#end&#10;&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;#getSetMethod($column)&#10;#end&#10;&#10;#foreach($column in $tableInfo.pkColumn)&#10;    /**&#10;     * 获取主键值&#10;     *&#10;     * @return 主键值&#10;     */&#10;    @Override&#10;    protected Serializable pkVal() {&#10;        return this.$!column.name;&#10;    }&#10;    #break&#10;#end&#10;}" />
                    <option name="name" value="entity" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Dao&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/dao&quot;, &quot;Dao.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;dao&quot;)&#10;&#10;import com.baomidou.mybatisplus.core.mapper.BaseMapper;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表数据库访问层&quot;)&#10;public interface $!{tableName} extends BaseMapper&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="dao" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Service&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service&quot;, &quot;Service.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.IService;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务接口&quot;)&#10;public interface $!{tableName} extends IService&lt;$!tableInfo.name&gt; {&#10;&#10;}" />
                    <option name="name" value="service" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;ServiceImpl&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/service/impl&quot;, &quot;ServiceImpl.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;service.impl&quot;)&#10;&#10;import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;&#10;import $!{tableInfo.savePackageName}.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表服务实现类&quot;)&#10;@Service(&quot;$!tool.firstLowerCase($tableInfo.name)Service&quot;)&#10;public class $!{tableName} extends ServiceImpl&lt;$!{tableInfo.name}Dao, $!{tableInfo.name}&gt; implements $!{tableInfo.name}Service {&#10;&#10;}" />
                    <option name="name" value="serviceImpl" />
                  </Template>
                  <Template>
                    <option name="code" value="##导入宏定义&#10;$!define&#10;&#10;##设置表后缀（宏定义）&#10;#setTableSuffix(&quot;Controller&quot;)&#10;&#10;##保存文件（宏定义）&#10;#save(&quot;/controller&quot;, &quot;Controller.java&quot;)&#10;&#10;##包路径（宏定义）&#10;#setPackageSuffix(&quot;controller&quot;)&#10;&#10;##定义服务名&#10;#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), &quot;Service&quot;))&#10;&#10;##定义实体对象名&#10;#set($entityName = $!tool.firstLowerCase($!tableInfo.name))&#10;&#10;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&#10;import com.baomidou.mybatisplus.extension.api.ApiController;&#10;import com.baomidou.mybatisplus.extension.api.ApiResult;&#10;import com.baomidou.mybatisplus.extension.plugins.pagination.Page;&#10;import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import javax.annotation.Resource;&#10;import java.io.Serializable;&#10;import java.util.List;&#10;&#10;##表注释（宏定义）&#10;#tableComment(&quot;表控制层&quot;)&#10;@RestController&#10;@RequestMapping(&quot;$!tool.firstLowerCase($!tableInfo.name)&quot;)&#10;public class $!{tableName} extends ApiController {&#10;    /**&#10;     * 服务对象&#10;     */&#10;    @Resource&#10;    private $!{tableInfo.name}Service $!{serviceName};&#10;&#10;    /**&#10;     * 分页查询所有数据&#10;     *&#10;     * @param page 分页对象&#10;     * @param $!entityName 查询实体&#10;     * @return 所有数据&#10;     */&#10;    @GetMapping&#10;    public ApiResult selectAll(Page&lt;$!tableInfo.name&gt; page, $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.page(page, new QueryWrapper&lt;&gt;($!entityName)));&#10;    }&#10;&#10;    /**&#10;     * 通过主键查询单条数据&#10;     *&#10;     * @param id 主键&#10;     * @return 单条数据&#10;     */&#10;    @GetMapping(&quot;{id}&quot;)&#10;    public ApiResult selectOne(@PathVariable Serializable id) {&#10;        return success(this.$!{serviceName}.getById(id));&#10;    }&#10;&#10;    /**&#10;     * 新增数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 新增结果&#10;     */&#10;    @PostMapping&#10;    public ApiResult insert(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.save($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 修改数据&#10;     *&#10;     * @param $!entityName 实体对象&#10;     * @return 修改结果&#10;     */&#10;    @PutMapping&#10;    public ApiResult update(@RequestBody $!tableInfo.name $!entityName) {&#10;        return success(this.$!{serviceName}.updateById($!entityName));&#10;    }&#10;&#10;    /**&#10;     * 删除数据&#10;     *&#10;     * @param idList 主键结合&#10;     * @return 删除结果&#10;     */&#10;    @DeleteMapping&#10;    public ApiResult delete(@RequestParam(&quot;idList&quot;) List&lt;Long&gt; idList) {&#10;        return success(this.$!{serviceName}.removeByIds(idList));&#10;    }&#10;}" />
                    <option name="name" value="controller" />
                  </Template>
                </list>
              </option>
              <option name="name" value="MybatisPlus" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="self_mybatis_dao">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Service&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;&#10;&#10;import $!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name};&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务接口&#10; * &#10; * @author $!author&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 获取 $!{tableInfo.name} 表所有记录&#10;     *&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; listAll$!{tableInfo.name}();&#10;    &#10;    /**&#10;     * 通过主键获取一条 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;    &#10;    /**&#10;     * 获取一条符合要求的 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 获取 $!{tableInfo.name} 表中符合查询条件的所有记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!{tableInfo.name}POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; list$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中添加一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    Boolean insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中修改一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 主键不为空的查询条件对象&#10;     * @return true|false&#10;     */&#10;    Boolean update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 通过主键删除 $!{tableInfo.name} 表中的一条记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return true|false&#10;     */&#10;    Boolean delete$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询 $!{tableInfo.name} 表中是否存在符合查询条件的记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    Boolean exist$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 统计 $!{tableInfo.name} 表中符合查询条件的记录条数&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 统计值&#10;     */&#10;    Integer count$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;}" />
                    <option name="name" value="service.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;ServiceImpl&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service/impl&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;&#10;&#10;import $!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;import javax.annotation.Resource;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类&#10; *&#10; * @author $!author&#10; */&#10;@Service(&quot;$!tool.firstLowerCase($!{tableInfo.name})Service&quot;)&#10;public class $!{tableName} implements $!{tableInfo.name}Service {&#10;    &#10;    @Resource&#10;    private $!{tableInfo.name}Dao $!tool.firstLowerCase($!{tableInfo.name})Dao;&#10;&#10;    /**&#10;     * 获取 $!{tableInfo.name} 表所有记录&#10;     *&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})POList&#10;     */&#10;    @Override&#10;    public List&lt;$!{tableInfo.name}&gt; listAll$!{tableInfo.name}() {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.listAll$!{tableInfo.name}();&#10;    }&#10;    &#10;    /**&#10;     * 通过主键获取一条 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} get$!{tableInfo.name}ById($!pk.shortType $!pk.name) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.get$!{tableInfo.name}ById($!pk.name);&#10;    }&#10;    &#10;    /**&#10;     * 获取一条符合要求的 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} get$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.get$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;    /**&#10;     * 获取 $!{tableInfo.name} 表中符合查询条件的所有记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!{tableInfo.name}POList&#10;     */&#10;    @Override&#10;    public List&lt;$!{tableInfo.name}&gt; list$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.list$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;    /**&#10;     * 在 $!{tableInfo.name} 表中添加一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return  1 == $!{tool.firstLowerCase($!{tableInfo.name})}Dao.insert$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中修改一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 主键不为空的查询条件对象&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return 1 == $!{tool.firstLowerCase($!{tableInfo.name})}Dao.update$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;&#10;    /**&#10;     * 通过主键删除 $!{tableInfo.name} 表中的一条记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean delete$!{tableInfo.name}ById($!pk.shortType $!pk.name) {&#10;        return 1 == $!{tool.firstLowerCase($!{tableInfo.name})}Dao.delete$!{tableInfo.name}ById($!pk.name);&#10;    }&#10;    &#10;    /**&#10;     * 查询 $!{tableInfo.name} 表中是否存在符合查询条件的记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean exist$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return null != $!{tool.firstLowerCase($!{tableInfo.name})}Dao.exist$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;    /**&#10;     * 统计 $!{tableInfo.name} 表中符合查询条件的记录条数&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 统计值&#10;     */&#10;    @Override&#10;    public Integer count$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Dao.count$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;}" />
                    <option name="name" value="serviceImpl.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Dao&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/dao&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;&#10;&#10;import $!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name};&#10;import org.apache.ibatis.annotations.Param;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层&#10; *&#10; * @author $!author&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 获取 $!{tableInfo.name} 表所有记录&#10;     *&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; listAll$!{tableInfo.name}();&#10;    &#10;    /**&#10;     * 通过主键获取一条 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;    &#10;   /**&#10;     * 获取一条符合要求的 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 获取 $!{tableInfo.name} 表中符合查询条件的所有记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!{tableInfo.name}POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; list$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 在 $!{tableInfo.name} 表中添加一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 1|0&#10;     */&#10;    Integer insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中修改一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 主键不为空的查询条件对象&#10;     * @return 1|0&#10;     */&#10;    Integer update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 通过主键删除 $!{tableInfo.name} 表中的一条记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return 1|0&#10;     */&#10;    Integer delete$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询 $!{tableInfo.name} 表是否存在符合查询条件的一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 1|null&#10;     */&#10;    Integer exist$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 统计 $!{tableInfo.name} 表中符合查询条件的记录条数&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 统计值&#10;     */&#10;    Integer count$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;}" />
                    <option name="name" value="dao.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;Mapper.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;&lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao&quot;&gt;&#10;&#10;    &lt;resultMap type=&quot;$!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name}&quot; id=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;#if($!pk.obj.name==$!column.obj.name)&#10;        &lt;id property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#else&#10;        &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#end&#10;#end&#10;    &lt;/resultMap&gt;&#10;&#10;    &lt;!--获取$!{tableInfo.name}表的所有记录--&gt;&#10;    &lt;select id=&quot;listAll$!{tableInfo.name}&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;    &lt;/select&gt;&#10;    &#10;    &lt;!--通过主键获取$!{tableInfo.name}表的一条记录--&gt;&#10;    &lt;select id=&quot;get$!{tableInfo.name}ById&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--查询$!{tableInfo.name}表中是否存在符合查询条件的记录--&gt;&#10;    &lt;select id=&quot;exist$!{tableInfo.name}&quot; resultType=&quot;java.lang.Integer&quot;&gt;&#10;        select 1&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;        limit 1&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--获取一条符合查询条件的$!{tableInfo.name}表记录--&gt;&#10;    &lt;select id=&quot;get$!{tableInfo.name}&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;        limit 1&#10;    &lt;/select&gt;&#10;    &#10;    &lt;!--获取$!{tableInfo.name}表中符合查询条件的所有记录--&gt;&#10;    &lt;select id=&quot;list$!{tableInfo.name}&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--在$!{tableInfo.name}表中添加一条记录--&gt;&#10;    &lt;insert id=&quot;insert$!{tableInfo.name}&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into `$!{tableInfo.obj.name}`(&#10;            &lt;trim suffixOverrides=&quot;,&quot;&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;$!column.obj.name, &lt;/if&gt;&#10;#end            &lt;/trim&gt;&#10;                )&#10;        values (&#10;            &lt;trim suffixOverrides=&quot;,&quot;&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;#{$!{column.name}}, &lt;/if&gt;&#10;#end            &lt;/trim&gt;&#10;                )&#10;    &lt;/insert&gt;&#10;&#10;    &lt;!--在$!{tableInfo.name}表中更新一条记录--&gt;&#10;    &lt;update id=&quot;update$!{tableInfo.name}&quot;&gt;&#10;        update `$!{tableInfo.obj.name}`&#10;        &lt;set&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                $!column.obj.name = #{$!column.name},&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/set&gt;&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/update&gt;&#10;&#10;    &lt;!--通过主键删除$!{tableInfo.name}表中的一条记录--&gt;&#10;    &lt;delete id=&quot;delete$!{tableInfo.name}ById&quot;&gt;&#10;        delete from `$!{tableInfo.obj.name}` where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/delete&gt;&#10;&#10;    &lt;!--统计$!{tableInfo.name}表中符合查询条件的记录条数--&gt;&#10;    &lt;select id=&quot;count$!{tableInfo.name}&quot; resultType=&quot;java.lang.Integer&quot;&gt;&#10;        select count(*)&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;    &lt;/select&gt;&#10;    &#10;&lt;/mapper&gt;" />
                    <option name="name" value="mapper.xml" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/domain/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;domain.entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import java.lang.reflect.Field;&#10;import java.lang.reflect.Modifier;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;表实体类&quot;)&#10;public class $!{tableInfo.name} implements Serializable {&#10;    private static final long serialVersionUID = 1L;&#10;#foreach($column in $tableInfo.fullColumn)&#10;&#10;#if(${column.comment})&#10;    /**&#10;     * ${column.comment}&#10;     */&#10;#end&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;##使用宏定义实现get,set方法&#10;    #getSetMethod($column)&#10;#end&#10;    &#10;    @Override&#10;    public String toString() {&#10;        StringBuffer sb = new StringBuffer(300);&#10;        sb.append(&quot;{&quot;);&#10;        Field[] fields = this.getClass().getDeclaredFields();&#10;        try {&#10;            for (Field field : fields) {&#10;                field.setAccessible(true);&#10;                String modifier = Modifier.toString(field.getModifiers());&#10;                if (modifier.contains(&quot;static final&quot;)) {&#10;                    continue;&#10;                }&#10;                String typeName = field.getGenericType().getTypeName();&#10;                if (&quot;java.lang.String&quot;.equals(typeName) || &quot;java.utils.Date&quot;.equals(typeName)) {&#10;                    sb.append(field.getName()).append(&quot;:\&quot;&quot;).append(field.get(this)).append(&quot;\&quot;,&quot;);&#10;                } else {&#10;                    sb.append(field.getName()).append(&quot;:&quot;).append(field.get(this)).append(&quot;,&quot;);&#10;                }&#10;            }&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;        sb.deleteCharAt(sb.lastIndexOf(&quot;,&quot;));&#10;        sb.append(&quot;}&quot;);&#10;        return sb.toString();&#10;    }&#10;}" />
                    <option name="name" value="entity.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/domain/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;domain.entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import lombok.Data;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;表实体类&quot;)&#10;public class $!{tableInfo.name} implements Serializable {&#10;&#10;    private static final long serialVersionUID = 1L;&#10;#foreach($column in $tableInfo.fullColumn)&#10;&#10;#if(${column.comment})&#10;    /**&#10;     * ${column.comment}&#10;     */&#10;#end&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;    &#10;    &#10;}" />
                    <option name="name" value="entity-lombok.java" />
                  </Template>
                </list>
              </option>
              <option name="name" value="self_mybatis_dao" />
            </TemplateGroup>
          </value>
        </entry>
        <entry key="self_mybatis_mapper">
          <value>
            <TemplateGroup>
              <option name="elementList">
                <list>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Service&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service;&#10;&#10;import $!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name};&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务接口&#10; * &#10; * @author $!author&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 获取 $!{tableInfo.name} 表所有记录&#10;     *&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; listAll$!{tableInfo.name}();&#10;    &#10;    /**&#10;     * 通过主键获取一条 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;    &#10;    /**&#10;     * 获取一条符合要求的 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 获取 $!{tableInfo.name} 表中符合查询条件的所有记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!{tableInfo.name}POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; list$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中添加一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    Boolean insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中修改一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 主键不为空的查询条件对象&#10;     * @return true|false&#10;     */&#10;    Boolean update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 通过主键删除 $!{tableInfo.name} 表中的一条记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return true|false&#10;     */&#10;    Boolean delete$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询 $!{tableInfo.name} 表中是否存在符合查询条件的记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    Boolean exist$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 统计 $!{tableInfo.name} 表中符合查询条件的记录条数&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 统计值&#10;     */&#10;    Integer count$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;}" />
                    <option name="name" value="service.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;ServiceImpl&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/service/impl&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}service.impl;&#10;&#10;import $!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name};&#10;import $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Mapper;&#10;import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;&#10;import org.springframework.stereotype.Service;&#10;&#10;import javax.annotation.Resource;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表服务实现类&#10; *&#10; * @author $!author&#10; */&#10;@Service(&quot;$!tool.firstLowerCase($!{tableInfo.name})Service&quot;)&#10;public class $!{tableName} implements $!{tableInfo.name}Service {&#10;    &#10;    @Resource&#10;    private $!{tableInfo.name}Mapper $!tool.firstLowerCase($!{tableInfo.name})Mapper;&#10;&#10;    /**&#10;     * 获取 $!{tableInfo.name} 表所有记录&#10;     *&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})POList&#10;     */&#10;    @Override&#10;    public List&lt;$!{tableInfo.name}&gt; listAll$!{tableInfo.name}() {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.listAll$!{tableInfo.name}();&#10;    }&#10;    &#10;    /**&#10;     * 通过主键获取一条 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} get$!{tableInfo.name}ById($!pk.shortType $!pk.name) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.get$!{tableInfo.name}ById($!pk.name);&#10;    }&#10;    &#10;    /**&#10;     * 获取一条符合要求的 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    @Override&#10;    public $!{tableInfo.name} get$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.get$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;    /**&#10;     * 获取 $!{tableInfo.name} 表中符合查询条件的所有记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!{tableInfo.name}POList&#10;     */&#10;    @Override&#10;    public List&lt;$!{tableInfo.name}&gt; list$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.list$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;    /**&#10;     * 在 $!{tableInfo.name} 表中添加一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return  1 == $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.insert$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中修改一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 主键不为空的查询条件对象&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return 1 == $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.update$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;&#10;    /**&#10;     * 通过主键删除 $!{tableInfo.name} 表中的一条记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean delete$!{tableInfo.name}ById($!pk.shortType $!pk.name) {&#10;        return 1 == $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.delete$!{tableInfo.name}ById($!pk.name);&#10;    }&#10;    &#10;    /**&#10;     * 查询 $!{tableInfo.name} 表中是否存在符合查询条件的记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return true|false&#10;     */&#10;    @Override&#10;    public Boolean exist$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return null != $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.exist$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;    /**&#10;     * 统计 $!{tableInfo.name} 表中符合查询条件的记录条数&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 统计值&#10;     */&#10;    @Override&#10;    public Integer count$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO) {&#10;        return $!{tool.firstLowerCase($!{tableInfo.name})}Mapper.count$!{tableInfo.name}($!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    }&#10;    &#10;}" />
                    <option name="name" value="serviceImpl.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##定义初始变量&#10;#set($tableName = $tool.append($tableInfo.name, &quot;Mapper&quot;))&#10;##设置回调&#10;$!callback.setFileName($tool.append($tableName, &quot;.java&quot;))&#10;$!callback.setSavePath($tool.append($tableInfo.savePath, &quot;/dao&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;#if($tableInfo.savePackageName)package $!{tableInfo.savePackageName}.#{end}dao;&#10;&#10;import $!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name};&#10;import org.apache.ibatis.annotations.Param;&#10;import java.util.List;&#10;&#10;/**&#10; * $!{tableInfo.comment}($!{tableInfo.name})表数据库访问层&#10; *&#10; * @author $!author&#10; */&#10;public interface $!{tableName} {&#10;&#10;    /**&#10;     * 获取 $!{tableInfo.name} 表所有记录&#10;     *&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; listAll$!{tableInfo.name}();&#10;    &#10;    /**&#10;     * 通过主键获取一条 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;    &#10;   /**&#10;     * 获取一条符合要求的 $!{tableInfo.name} 表记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!tool.firstLowerCase($!{tableInfo.name})PO  &#10;     */&#10;    $!{tableInfo.name} get$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 获取 $!{tableInfo.name} 表中符合查询条件的所有记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return $!{tableInfo.name}POList&#10;     */&#10;    List&lt;$!{tableInfo.name}&gt; list$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 在 $!{tableInfo.name} 表中添加一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 1|0&#10;     */&#10;    Integer insert$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 在 $!{tableInfo.name} 表中修改一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 主键不为空的查询条件对象&#10;     * @return 1|0&#10;     */&#10;    Integer update$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;&#10;    /**&#10;     * 通过主键删除 $!{tableInfo.name} 表中的一条记录&#10;     *&#10;     * @param $!pk.name $!{tableInfo.name}表主键&#10;     * @return 1|0&#10;     */&#10;    Integer delete$!{tableInfo.name}ById($!pk.shortType $!pk.name);&#10;&#10;    /**&#10;     * 查询 $!{tableInfo.name} 表是否存在符合查询条件的一条记录&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 1|null&#10;     */&#10;    Integer exist$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;    &#10;    /**&#10;     * 统计 $!{tableInfo.name} 表中符合查询条件的记录条数&#10;     *&#10;     * @param $!tool.firstLowerCase($!{tableInfo.name})QO 查询条件对象&#10;     * @return 统计值&#10;     */&#10;    Integer count$!{tableInfo.name}($!{tableInfo.name} $!tool.firstLowerCase($!{tableInfo.name})QO);&#10;}" />
                    <option name="name" value="dao.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入mybatis支持&#10;$!mybatisSupport&#10;&#10;##设置保存名称与保存位置&#10;$!callback.setFileName($tool.append($!{tableInfo.name}, &quot;Mapper.xml&quot;))&#10;$!callback.setSavePath($tool.append($modulePath, &quot;/src/main/resources/mapper&quot;))&#10;&#10;##拿到主键&#10;#if(!$tableInfo.pkColumn.isEmpty())&#10;    #set($pk = $tableInfo.pkColumn.get(0))&#10;#end&#10;&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;&#10;&lt;mapper namespace=&quot;$!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Mapper&quot;&gt;&#10;&#10;    &lt;resultMap type=&quot;$!{tableInfo.savePackageName}.domain.entity.$!{tableInfo.name}&quot; id=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;#if($!pk.obj.name==$!column.obj.name)&#10;        &lt;id property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#else&#10;        &lt;result property=&quot;$!column.name&quot; column=&quot;$!column.obj.name&quot; jdbcType=&quot;$!column.ext.jdbcType&quot;/&gt;&#10;#end&#10;#end&#10;    &lt;/resultMap&gt;&#10;&#10;    &lt;!--获取$!{tableInfo.name}表的所有记录--&gt;&#10;    &lt;select id=&quot;listAll$!{tableInfo.name}&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;    &lt;/select&gt;&#10;    &#10;    &lt;!--通过主键获取$!{tableInfo.name}表的一条记录--&gt;&#10;    &lt;select id=&quot;get$!{tableInfo.name}ById&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--查询$!{tableInfo.name}表中是否存在符合查询条件的记录--&gt;&#10;    &lt;select id=&quot;exist$!{tableInfo.name}&quot; resultType=&quot;java.lang.Integer&quot;&gt;&#10;        select 1&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;        limit 1&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--获取一条符合查询条件的$!{tableInfo.name}表记录--&gt;&#10;    &lt;select id=&quot;get$!{tableInfo.name}&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;        limit 1&#10;    &lt;/select&gt;&#10;    &#10;    &lt;!--获取$!{tableInfo.name}表中符合查询条件的所有记录--&gt;&#10;    &lt;select id=&quot;list$!{tableInfo.name}&quot; resultMap=&quot;$!{tableInfo.name}Map&quot;&gt;&#10;        select&#10;          #allSqlColumn()&#10;&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;    &lt;/select&gt;&#10;&#10;    &lt;!--在$!{tableInfo.name}表中添加一条记录--&gt;&#10;    &lt;insert id=&quot;insert$!{tableInfo.name}&quot; keyProperty=&quot;$!pk.name&quot; useGeneratedKeys=&quot;true&quot;&gt;&#10;        insert into `$!{tableInfo.obj.name}`(&#10;            &lt;trim suffixOverrides=&quot;,&quot;&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;$!column.obj.name, &lt;/if&gt;&#10;#end            &lt;/trim&gt;&#10;                )&#10;        values (&#10;            &lt;trim suffixOverrides=&quot;,&quot;&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;#{$!{column.name}}, &lt;/if&gt;&#10;#end            &lt;/trim&gt;&#10;                )&#10;    &lt;/insert&gt;&#10;&#10;    &lt;!--在$!{tableInfo.name}表中更新一条记录--&gt;&#10;    &lt;update id=&quot;update$!{tableInfo.name}&quot;&gt;&#10;        update `$!{tableInfo.obj.name}`&#10;        &lt;set&gt;&#10;#foreach($column in $tableInfo.otherColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                $!column.obj.name = #{$!column.name},&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/set&gt;&#10;        where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/update&gt;&#10;&#10;    &lt;!--通过主键删除$!{tableInfo.name}表中的一条记录--&gt;&#10;    &lt;delete id=&quot;delete$!{tableInfo.name}ById&quot;&gt;&#10;        delete from `$!{tableInfo.obj.name}` where $!pk.obj.name = #{$!pk.name}&#10;    &lt;/delete&gt;&#10;&#10;    &lt;!--统计$!{tableInfo.name}表中符合查询条件的记录条数--&gt;&#10;    &lt;select id=&quot;count$!{tableInfo.name}&quot; resultType=&quot;java.lang.Integer&quot;&gt;&#10;        select count(*)&#10;        from `$!tableInfo.obj.name`&#10;        &lt;where&gt;&#10;#foreach($column in $tableInfo.fullColumn)&#10;            &lt;if test=&quot;$!column.name != null#if($column.type.equals(&quot;java.lang.String&quot;)) and $!column.name != ''#end&quot;&gt;&#10;                and $!column.obj.name = #{$!column.name}&#10;            &lt;/if&gt;&#10;#end&#10;        &lt;/where&gt;&#10;    &lt;/select&gt;&#10;    &#10;&lt;/mapper&gt;" />
                    <option name="name" value="mapper.xml" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/domain/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;domain.entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import java.lang.reflect.Field;&#10;import java.lang.reflect.Modifier;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;表实体类&quot;)&#10;public class $!{tableInfo.name} implements Serializable {&#10;    private static final long serialVersionUID = 1L;&#10;#foreach($column in $tableInfo.fullColumn)&#10;&#10;#if(${column.comment})&#10;    /**&#10;     * ${column.comment}&#10;     */&#10;#end&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;&#10;#foreach($column in $tableInfo.fullColumn)&#10;##使用宏定义实现get,set方法&#10;    #getSetMethod($column)&#10;#end&#10;    &#10;    @Override&#10;    public String toString() {&#10;        StringBuffer sb = new StringBuffer(300);&#10;        sb.append(&quot;{&quot;);&#10;        Field[] fields = this.getClass().getDeclaredFields();&#10;        try {&#10;            for (Field field : fields) {&#10;                field.setAccessible(true);&#10;                String modifier = Modifier.toString(field.getModifiers());&#10;                if (modifier.contains(&quot;static final&quot;)) {&#10;                    continue;&#10;                }&#10;                sb.append(field.getName()).append(&quot;:&quot;).append(field.get(this)).append(&quot;,&quot;);&#10;            }&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;        sb.deleteCharAt(sb.lastIndexOf(&quot;,&quot;));&#10;        sb.append(&quot;}&quot;);&#10;        return sb.toString();&#10;    }&#10;}" />
                    <option name="name" value="entity.java" />
                  </Template>
                  <Template>
                    <option name="code" value="##引入宏定义&#10;$!define&#10;&#10;##使用宏定义设置回调（保存位置与文件后缀）&#10;#save(&quot;/domain/entity&quot;, &quot;.java&quot;)&#10;&#10;##使用宏定义设置包后缀&#10;#setPackageSuffix(&quot;domain.entity&quot;)&#10;&#10;##使用全局变量实现默认包导入&#10;$!autoImport&#10;import java.io.Serializable;&#10;import lombok.Data;&#10;&#10;##使用宏定义实现类注释信息&#10;#tableComment(&quot;表实体类&quot;)&#10;public class $!{tableInfo.name} implements Serializable {&#10;&#10;    private static final long serialVersionUID = 1L;&#10;#foreach($column in $tableInfo.fullColumn)&#10;&#10;#if(${column.comment})&#10;    /**&#10;     * ${column.comment}&#10;     */&#10;#end&#10;    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};&#10;#end&#10;    &#10;    &#10;}" />
                    <option name="name" value="entity-lombok.java" />
                  </Template>
                </list>
              </option>
              <option name="name" value="self_mybatis_mapper" />
            </TemplateGroup>
          </value>
        </entry>
      </map>
    </option>
    <option name="typeMapperGroupMap">
      <map>
        <entry key="Default">
          <value>
            <TypeMapperGroup>
              <option name="elementList">
                <list>
                  <TypeMapper>
                    <option name="columnType" value="varchar(\(\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="char(\(\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="text" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="decimal(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Double" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="decimal(\(\d+,\d+\))?" />
                    <option name="javaType" value="java.lang.Double" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="integer" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int4" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int8" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="bigint(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="datetime" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="timestamp" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="boolean" />
                    <option name="javaType" value="java.lang.Boolean" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="double" />
                    <option name="javaType" value="java.lang.Double" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="date" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="tinyint(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int(\(\d+\))? unsigned" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                </list>
              </option>
              <option name="name" value="Default" />
            </TypeMapperGroup>
          </value>
        </entry>
        <entry key="self_mapper">
          <value>
            <TypeMapperGroup>
              <option name="elementList">
                <list>
                  <TypeMapper>
                    <option name="columnType" value="varchar(\(\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="char(\(\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="text" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="decimal(\(\d+\))?(\(\d+,\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int4" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int8" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="bigint(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="datetime" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="timestamp" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="boolean" />
                    <option name="javaType" value="java.lang.Boolean" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="double" />
                    <option name="javaType" value="java.lang.Double" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="date" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="tinyint(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int(\(\d+\))? unsigned" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                </list>
              </option>
              <option name="name" value="self_mapper" />
            </TypeMapperGroup>
          </value>
        </entry>
        <entry key="self_mybatis">
          <value>
            <TypeMapperGroup>
              <option name="elementList">
                <list>
                  <TypeMapper>
                    <option name="columnType" value="varchar(\(\d+\))?" />
                    <option name="javaType" value="java.lang.String" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="char(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Object" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int(\(\d+\))?" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="int(\(\d+\))? unsigned" />
                    <option name="javaType" value="java.lang.Long" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="tinyint(\(\d+\))?( unsigned)?" />
                    <option name="javaType" value="java.lang.Integer" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="decimal(\(\d+\))?(\(\d+,\d+\))?" />
                    <option name="javaType" value="java.math.BigDecimal" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="date" />
                    <option name="javaType" value="java.sql.Date" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="datetime" />
                    <option name="javaType" value="java.sql.Timestamp" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="timestamp" />
                    <option name="javaType" value="java.sql.Timestamp" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="boolean" />
                    <option name="javaType" value="java.lang.Boolean" />
                  </TypeMapper>
                  <TypeMapper>
                    <option name="columnType" value="bit" />
                    <option name="javaType" value="java.lang.Boolean" />
                  </TypeMapper>
                </list>
              </option>
              <option name="name" value="self_mybatis" />
            </TypeMapperGroup>
          </value>
        </entry>
      </map>
    </option>
  </component>
</application>